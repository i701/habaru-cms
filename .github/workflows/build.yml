name: Docker Build, Optimize with DockerSlim, and Push to Docker Hub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-optimize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clear Yarn Cache
        run: yarn cache clean

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}

      # Build the Docker image first
      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest

      # Optimize the image using DockerSlim GitHub Action
      - name: Optimize Docker Image with DockerSlim
        uses: kitabisa/docker-slim-action@v1
        env:
          DSLIM_HTTP_PROBE: false
        with:
          target: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          tag: "slim"
          include-path: /opt/node_modules/rxjs /opt/node_modules/inquirer


      # Push both the regular and optimized images to Docker Hub
      - name: Push Docker Images to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:slim
